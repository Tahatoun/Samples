using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace CsvComparerCli
{
    // ================================
    // MODELE RESULTAT COMPARAISON CSV
    // ================================
    public class CsvComparisonResult
    {
        public string Header { get; set; } = string.Empty;
        public List<string> MissingInFile1 { get; set; } = new();
        public List<string> MissingInFile2 { get; set; } = new();
    }

    // =====================
    // HELPER DE LECTURE CSV
    // =====================
    public static class CsvReaderHelper
    {
        public static (string Header, HashSet<string> Lines) ReadCsvContent(string filePath)
        {
            if (!File.Exists(filePath))
                throw new FileNotFoundException($"Fichier non trouv√© : {filePath}");

            var allLines = File.ReadAllLines(filePath, Encoding.UTF8);
            if (allLines.Length < 1)
                throw new Exception($"Fichier vide ou invalide : {filePath}");

            var header = allLines[0].Trim();
            var lines = new HashSet<string>(
                allLines.Skip(1)
                        .Select(l => l.Trim())
                        .Where(l => !string.IsNullOrWhiteSpace(l))
            );

            return (header, lines);
        }
    }

    // =========================
    // SERVICE DE COMPARAISON CSV
    // =========================
    public class CsvComparer
    {
        public CsvComparisonResult CompareCsvFiles(string file1, string file2)
        {
            var (header1, lines1) = CsvReaderHelper.ReadCsvContent(file1);
            var (header2, lines2) = CsvReaderHelper.ReadCsvContent(file2);

            if (header1 != header2)
                throw new Exception("Les fichiers n'ont pas les m√™mes colonnes !");

            return new CsvComparisonResult
            {
                Header = header1,
                MissingInFile1 = lines2.Except(lines1).ToList(),
                MissingInFile2 = lines1.Except(lines2).ToList()
            };
        }
    }

    // ============
    // PROGRAMME CLI
    // ============
    public class Program
    {
        public static void Main(string[] args)
        {
            if (args.Length != 2)
            {
                Console.WriteLine("‚ùå Usage : dotnet run -- <file1.csv> <file2.csv>");
                return;
            }

            var file1 = args[0];
            var file2 = args[1];

            try
            {
                var comparer = new CsvComparer();
                var result = comparer.CompareCsvFiles(file1, file2);

                Console.WriteLine("üìä R√©sum√© de la comparaison :");
                Console.WriteLine($"‚Üí Lignes dans {Path.GetFileName(file1)} mais absentes dans {Path.GetFileName(file2)} : {result.MissingInFile2.Count}");
                Console.WriteLine($"‚Üí Lignes dans {Path.GetFileName(file2)} mais absentes dans {Path.GetFileName(file1)} : {result.MissingInFile1.Count}");

                Directory.CreateDirectory("output");
                File.WriteAllLines("output/missing_in_file1.csv", new[] { result.Header }.Concat(result.MissingInFile1));
                File.WriteAllLines("output/missing_in_file2.csv", new[] { result.Header }.Concat(result.MissingInFile2));

                Console.WriteLine("\n‚úÖ R√©sultats sauvegard√©s dans le dossier 'output'");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå Erreur : {ex.Message}");
            }
        }
    }
}